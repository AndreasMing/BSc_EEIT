---
title: "Zusammenfassung Advanced Programming"
author: "Joel von Rotz, Manuel Fanger & Andreas Ming"
date: "01.01.2023"

lang: de

# [RENDER CONFIGURATION] ==============================
format:
  pdf:
    include-in-header:
      - config.tex
    keep-tex: true

pdf-engine: pdflatex
# [DOCUMENT CONFIGURATION] ============================
geometry: 
- "top=25mm"
- "bottom=30mm"
- "left=15mm"
- "right=15mm"
papersize: a4paper
fontsize: 9pt

code-block-border-left: false
code-block-bg: "#f7f7f7"

toc: true
toc-depth: 3
number-sections: true
number-depth: 3
pagenumbering: none
highlight-style: github
---

# `C#` und `.Net`-Framework

{{< include chapters/csharp_and_net_framework.qmd >}}

# Konzepte `C#`

{{< include chapters/concepts_csharp.qmd >}}

# Vererbung

{{< include chapters/inheritance.qmd >}}

# Linux & Raspberry Pi 4

{{< include chapters/linux_and_raspberry_pi4.qmd >}}

# Windows Presentation Foundation

{{< include chapters/windows_presentation_format.qmd >}}

# Weitere Konzepte

{{< include chapters/more_concepts.qmd >}}

# Notes

## Overflows Integer

Im folgenden Code wird eine Variable `i` mit dem maximalen Wert eines `int` geladen und folgend inkrementiert.

```csharp
int i = int.MaxValue;
i++;
```

Wird aber dies direkt in der Initialisierung eingebettet (`...+ 1`), ruft der Compiler aus, da er den Overflow erkennt. (Einsetzung von Compilern)

```csharp
int i = int.MaxValue + 1; // COMPILE-FEHLER
i++;
```

::: callout-caution

Dieser Overflow-Fehler gilt nur bei **konstanten** Werten bei der Initialisierung. Wird eine separate Variable mit dem Maximalwert initialisierit und an `i` hinzuaddiert, gibt es keinen Fehler.


```csharp
int k = int.MaxValue;
int i = k + 1; // KEIN Fehler
```

:::

`\end{multicols}`{=latex}

## Linux bash commands

| Befehl               | Bedeutung                   | Erklärung                                         | Beispiel / Ergänzung                                                  |
|----------------------|-----------------------------|---------------------------------------------------|-----------------------------------------------------------------------|
| `man [Befehl]`       | manual                      | Hilfe zu Befehlen                                 |                                                                       |
| `apropos [Wort]`     | Hilfe durchsuchen           | durchsucht die Hilfe-Datei nach dem Wort          | `apropos -s1 disk` (`-s1`bezeichnet die Sektion der Benutzer-Befehle) |
| `pwd`                | print working directory     | aktuelles Verzeichnis anzeigen                    |                                                                       |
| `cd [Pfad]`          | change directory            | Verzeichnis wechseln                              | `cd /home/pi` von überall aufrufbar                                   |
|                      |                             |                                                   | `cd ~` oder `cd` in Benutzerverzeichnis '/pi'                         |
|                      |                             |                                                   | `cd [Foldername]` in Unterordner wechseln                             |
|                      |                             |                                                   | `cd ..` in Überordner wechseln                                        |
| `ls`                 | list                        | aktueller Verzeichnisinhalt anzeigen              | `ls -l` zusätzliche Informationen                                     |
|                      |                             |                                                   | `ls -la` zeigt auch versteckte Dateien                                |
| `mkdir [Pfad]`       | make directory              | Verzeichnis erstellen                             | `mkdir Logs` erstellt 'Logs'-Ordner                                   |
|                      |                             |                                                   | `mkdir Logs/New` erstellt 'New'-Ordner in 'Logs'                      |
| `rmdir [Pfad]`       | remove directory            | leeres Verzeichnis löschen                        |                                                                       |
| `rm [Name]`          | remove                      | File Löschen                                      | `rm -r` rekursives löschen (inklusive Unterordner)                    |
| `mv [Datei] [Pfad]`  | move                        | Datei in angegebenen Pfad schieben                |                                                                       |
| `cp [Quelle] [Ziel]` | copy                        | kopieren von Dateien und Verzeichnissen           |                                                                       |
| `ifconfig`           | Interface configuration     | Anzeigen der IP-Adressen                          |                                                                       |
| `sudo [Befehl]`      | super user do               | Als Administrator ausführen                       | `sudo reboot` neu starten                                             |
|                      |                             |                                                   | `sudo halt` herunterfahren                                            |
| `uname -a`           | System Information          | Kernel Version anzeigen                           |                                                                       |
| `touch [Datei]`      | Zeitstämpel ändern          | leere Datei erstellen oder Datum aktualisieren    | `touch aText.txt`                                                     |
| `ping [IP/hostname]` | Echo request                | Internetverbindung prüfen                         | `ping google.com`                                                     |
| `history`            | Befehlshistory              | Kommando Verlauf anzeigen                         |                                                                       |
| `![nr]`              |                             | Kommando aus Verlauf ausführen                    | `!!` letztes Komando ausführen                                        |
| `ps`                 | processes                   | Laufende Prozesse mit Prozess-IDs (PID) auflisten | `ps -axu`                                                             |
| `kill [PID]`         | Signal senden               | Prozess terminieren                               | `kill -9 [PID]` Prozess killen                                        |
| Ctrl+C               | `SIGINT` senden             | laufenden Prozess beenden                         |                                                                       |
| Ctrl+Z               | `SIGSTOP` senden            | laufenden Prozess in den Hintergrund              |                                                                       |
| `fg`                 | foreground                  | Hintergrundprozess wieder in den Vordergrund      |                                                                       |
| `bg`                 | background                  | Hintergrundprozesse auflisten                     |                                                                       |
| `clear`              |                             | Konsole löschen                                   |                                                                       |
| `grep [pattern]`     | suche                       | Nach 'pattern' suchen                             | `cat error.log \| grep wlan` WLAN-Error suchen                        |
| `whoami`             | who am I                    | aktueller Benutzer                                |                                                                       |
| `more [Datei]`       |                             | seitenweise Ausgabe von Text                      |                                                                       |
| `less [Datei]`       |                             | seitenweise Ausgabe von Text, mit blättern        | `ls -la \| less`                                                      |
| `alias [X=U]`        | Pseudonym                   | einem Befehl 'U' ein Pseudonym 'X' geben          | `alias ll="ls -l"` " " für separierte Befehle                         |
| `tail [Datei]`       | Ende                        | Ausgabe der letzen Zeile einer Datei              | `tail -f [Datei]` Vortlaufende Ausgabe                                |
| `cat [Dateien]`      | concatenate                 | Ausgabe von mehreren Dateien auf Konsole          | `cat text.txt othertext.txt error.log`                                |
| `which [Befehl]`     | welcher                     | Wo befindet sich ein Programm/Befehl              |                                                                       |
| `type [Befehl]`      |                             | Information zum Befehlstyp                        |                                                                       |
| `df`                 | disk free                   | Belegung Speicherplatz                            |                                                                       |
| `free`               | freier SPeicher             | Belegung Memory                                   |                                                                       |
| `top`                | Linux Prozesse anzeigen     | "Taskmanager", 'q' zum beenden                    |                                                                       |
| `hstop`              | Interaktiver Prozess Viewer | "Taskmanager", `top` on steroids                  |                                                                       |

[]: # (Do more as you'd like. See table "LinuxCommands.tgn" to use on "https://www.tablesgenerator.com/markdown_tables")

# Glossar

- **Timeslicing**: Bei Computersystemen wird *timeslicing* verwendet, damit mehrere Prozesse "parallel" verlaufen können. Jedem Prozess/Thread wird ein fixer Zeitslot gegeben, in dem es sein Code abarbeiten kann,  

![](images/TimeSlicing.png)

- **Präventiv/kooperativ**: Ein *präventives* Betriebsystem unterbricht ein Prozess, wenn dieser sein Time-Slot verbraucht hat. Ein *kooperatives* BS unterbicht die Prozesse [nicht]{.underline} und die Prozesse geben an, wann es fertig ist. 
